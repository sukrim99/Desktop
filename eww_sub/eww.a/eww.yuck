;##################### Modules #########################
(include "./modules/activewindow.yuck")
(include "./modules/audiolevels.yuck")
(include "./modules/bluetooth.yuck")
(include "./modules/bright.yuck")
(include "./modules/clock.yuck")
(include "./modules/editmode.yuck")
(include "./modules/music.yuck")
; (include "./modules/net.yuck")
(include "./modules/sys.yuck")
(include "./modules/variables.yuck")
(include "./modules/user.yuck")
; (include "./modules/volume.yuck")
(include "./modules/winstuff.yuck")
(include "./modules/workspaces.yuck")

;##################### Windows #########################
(include "./windows/bg-decor.yuck")
(include "./windows/dynamic-bg.yuck")
(include "./windows/dashboard.yuck")
(include "./windows/calendar.yuck")
(include "./windows/music.yuck")
(include "./windows/overview.yuck")
(include "./windows/osd.yuck")
(include "./windows/osettings.yuck")
(include "./windows/onotify.yuck")
; (include "./windows/system-menu.yuck")
(include "./windows/themer.yuck")
(include "./windows/winactions.yuck")
(include "./windows/winosd.yuck")
(include "./windows/winnotif.yuck")
(include "./windows/winpowermenu.yuck")
(include "./windows/winstart.yuck")
(include "./windows/winoverview.yuck")
(include "./windows/wingamebar.yuck")

(defwidget separator []
  (box
    :valign "start"
    (label
      :class "my-separator"
      :text "|"
    )
  )
)

(defwidget left []
  (eventbox
    :onhover "${EWW_CMD} update music_reveal=true"
    :onhoverlost "${EWW_CMD} update music_reveal=false"
    (box
      :space-evenly false
      :valign "start"
      :halign "start"
      (osettings-button)
      (osu-music-module)
      (revealer
        :reveal false
        :transition "slideright"
        (label
          :text "${brightness.level} ${wsjsona[0][0].at} ${wsjsonb[0][0].at}" ; Dummy to keep listeners active
        )
      )
    )
  )
)

(defwidget right []
  (eventbox
    :onhover "${EWW_CMD} update right_hover=true"
    :onhoverlost "${EWW_CMD} update right_hover=false"
    (box
      :space-evenly false
      :halign "end"
      :valign "start"
      (editmode)
      (themer)
      ; (user)
      (onotify-button)
    )
  )
)

(defwidget center []
  (box
    :valign "start"
    :space-evenly false
    :halign "center"
    (workspaces)
  )
)

(defwidget bar [] ; Class .bar applies automatically
  (eventbox
    (centerbox
      :class "bar-${compact ? 'compact' : 'normal'}"
      (left)
      (center)
      (right)
    )
  )
)

(defwidget winbar []
  (centerbox
    :class "winbar-bg"
    (box
      :space-evenly false
      (winstarticon)
      (wintaskbar)
      (revealer
        :reveal false
        :transition "slideright"
        (label
          :text "${brightness.level} ${wsjsona[0][0].at} ${wsjsonb[0][0].at}" ; Dummy to keep listeners active
        )
      )
    )
    (box
      :space-evenly false
      :style "margin-top: 40px; margin-bottom: -50px;"
      (workspaces)
    )
    (box
      :halign "end"
      :space-evenly false
      (winactions)
      (windate)
    )
  )
)

(defwindow bar
  :stacking "fg"
  :wm-ignore true
  :monitor 0
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "53px"
    ; :width "53px"
    ; :height "100%"
    :anchor "top center"
  )
  ; :stacking "fg"
  :exclusive false
  (bar)
)

(defwindow winbar
  :stacking "fg"
  :monitor 0
  :exclusive true
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    ; :height "53px"
    ; :width "53px"
    ; :height "100%"
    :anchor "bottom center"
  )
  ; :stacking "fg"
  :exclusive false
  (winbar)
)

